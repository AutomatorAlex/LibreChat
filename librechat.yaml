# For more information, see the Configuration Guide:
# https://www.librechat.ai/docs/configuration/librechat_yaml
version: 1.2.1
cache: true
fileStrategy: firebase

interface:
  customWelcome: "Welcome to LibreChat! Enjoy your experience."
  mcpServers:
    placeholder: 'MCP Servers'
  privacyPolicy:
    externalUrl: 'https://librechat.ai/privacy-policy'
    openNewTab: true
  termsOfService:
    externalUrl: 'https://librechat.ai/tos'
    openNewTab: true
    modalAcceptance: true
    modalTitle: "Terms of Service for LibreChat"
    modalContent: |
      # Terms and Conditions for LibreChat

      *Effective Date: February 18, 2024*

      Welcome to LibreChat, the informational website for the open-source AI chat platform, available at https://librechat.ai. These Terms of Service ("Terms") govern your use of our website and the services we offer. By accessing or using the Website, you agree to be bound by these Terms and our Privacy Policy, accessible at https://librechat.ai//privacy.

      ## 1. Ownership

      Upon purchasing a package from LibreChat, you are granted the right to download and use the code for accessing an admin panel for LibreChat. While you own the downloaded code, you are expressly prohibited from reselling, redistributing, or otherwise transferring the code to third parties without explicit permission from LibreChat.

      ## 2. User Data

      We collect personal data, such as your name, email address, and payment information, as described in our Privacy Policy. This information is collected to provide and improve our services, process transactions, and communicate with you.

      ## 3. Non-Personal Data Collection

      The Website uses cookies to enhance user experience, analyze site usage, and facilitate certain functionalities. By using the Website, you consent to the use of cookies in accordance with our Privacy Policy.

      ## 4. Use of the Website

      You agree to use the Website only for lawful purposes and in a manner that does not infringe the rights of, restrict, or inhibit anyone else's use and enjoyment of the Website. Prohibited behavior includes harassing or causing distress or inconvenience to any person, transmitting obscene or offensive content, or disrupting the normal flow of dialogue within the Website.

      ## 5. Governing Law

      These Terms shall be governed by and construed in accordance with the laws of the United States, without giving effect to any principles of conflicts of law.

      ## 6. Changes to the Terms

      We reserve the right to modify these Terms at any time. We will notify users of any changes by email. Your continued use of the Website after such changes have been notified will constitute your consent to such changes.

      ## 7. Contact Information

      If you have any questions about these Terms, please contact us at contact@librechat.ai.

      By using the Website, you acknowledge that you have read these Terms of Service and agree to be bound by them.

  endpointsMenu: true
  modelSelect: true
  parameters: true
  sidePanel: true
  presets: true
  prompts: true
  bookmarks: true
  multiConvo: true
  agents: true
  temporaryChat: true
  runCode: true

registration:
  socialLogins: ['github', 'google', 'discord', 'openid', 'facebook', 'apple', 'saml']

actions:
  allowedDomains:
    - "swapi.dev"
    - "librechat.ai"
    - "google.com"

endpoints:
  agents:
    recursionLimit: 50
    maxRecursionLimit: 100
  custom:
    # Cerebras-optimized models via OpenRouter
    - name: "OpenRouter (Cerebras)"
      apiKey: ${OPENROUTER_KEY}
      baseURL: https://openrouter.ai/api/v1
      iconURL: "https://openrouter.ai/favicon.ico"
      models:
        fetch: false
        default:
          # Cerebras-supported models only
          - meta-llama/llama-3.3-70b-instruct
          - meta-llama/llama-3.1-70b-instruct
          - meta-llama/llama-3.1-8b-instruct
      titleConvo: true
      titleModel: openai/gpt-4.1-mini:nitro
      dropParams:
        - stop
      modelDisplayLabel: "OpenRouter (Cerebras)"
      providerRouting:
        order:
          - cerebras
        allow_fallbacks: false

    # Anthropic models via OpenRouter
    - name: "Anthropic (OpenRouter)"
      apiKey: ${OPENROUTER_KEY}
      baseURL: https://openrouter.ai/api/v1
      models:
        fetch: false
        default:
          - anthropic/claude-sonnet-4:nitro
          - anthropic/claude-opus-4:nitro
          - anthropic/claude-3.7-sonnet:nitro
      titleConvo: true
      titleModel: openai/gpt-4.1-mini:nitro
      dropParams:
        - stop
      modelDisplayLabel: "Anthropic"
      plugins:
        - id: web
          max_results: 15
      agents:
        code: true
        tools: true

    # OpenAI models via OpenRouter
    - name: "OpenAI (OpenRouter)"
      apiKey: ${OPENROUTER_KEY}
      baseURL: https://openrouter.ai/api/v1
      models:
        fetch: false
        default:
          - openai/o3-pro:nitro
          - openai/gpt-4.1:nitro
          - openai/gpt-4.1-mini:nitro
          - openai/gpt-4.1-nano:nitro
          - openai/gpt-4.5-preview:nitro
          - openai/o1-preview:nitro
          - openai/o1-mini:nitro
          - openai/o4-mini:nitro
          - openai/o4-mini-high:nitro
          - openai/gpt-4o:nitro
      titleConvo: true
      titleModel: openai/gpt-4.1-nano:nitro
      dropParams:
        - stop
      modelDisplayLabel: "OpenAI"
      plugins:
        - id: web
          max_results: 15
      agents:
        code: true
        tools: true

    # Google models via OpenRouter
    - name: "Google (OpenRouter)"
      apiKey: ${OPENROUTER_KEY}
      baseURL: https://openrouter.ai/api/v1
      models:
        fetch: false
        default:
          - google/gemini-2.5-flash:nitro
          - google/gemini-2.5-pro:nitro
      titleConvo: true
      titleModel: openai/gpt-4.1-mini:nitro
      dropParams:
        - stop
      modelDisplayLabel: "Google"
      plugins:
        - id: web
          max_results: 15
      agents:
        code: true
        tools: true

    # Mistral models via OpenRouter
    - name: "Mistral (OpenRouter)"
      apiKey: ${OPENROUTER_KEY}
      baseURL: https://openrouter.ai/api/v1
      models:
        fetch: false
        default:
          - mistralai/mistral-large-2411:nitro
          - mistralai/mistral-large-2407:nitro
          - mistralai/mistral-medium-3:nitro
          - mistralai/mistral-small-3.1-24b-instruct:nitro
          - mistralai/mistral-small-24b-instruct-2501:nitro
          - mistralai/mistral-nemo:nitro
          - mistralai/mistral-7b-instruct:nitro
      titleConvo: true
      titleModel: openai/gpt-4.1-mini:nitro
      dropParams:
        - stop
      modelDisplayLabel: "Mistral"
      plugins:
        - id: web
          max_results: 15
      agents:
        code: true
        tools: true

    # Meta Llama models via OpenRouter
    - name: "Meta Llama (OpenRouter)"
      apiKey: ${OPENROUTER_KEY}
      baseURL: https://openrouter.ai/api/v1
      models:
        fetch: false
        default:
          - meta-llama/llama-4-maverick:nitro
          - meta-llama/llama-3.3-70b-instruct:nitro
          - meta-llama/llama-3.2-90b-vision-instruct:nitro
          - meta-llama/llama-3.2-11b-vision-instruct:nitro
          - meta-llama/llama-3.1-405b-instruct:nitro
          - nvidia/llama-3.1-nemotron-ultra-253b-v1:nitro
      titleConvo: true
      titleModel: openai/gpt-4.1-mini:nitro
      dropParams:
        - stop
      modelDisplayLabel: "Meta Llama"
      plugins:
        - id: web
          max_results: 15
      agents:
        code: true
        tools: true

    # xAI models via OpenRouter
    - name: "xAI (OpenRouter)"
      apiKey: ${OPENROUTER_KEY}
      baseURL: https://openrouter.ai/api/v1
      models:
        fetch: false
        default:
          - x-ai/grok-3:nitro
          - x-ai/grok-3-mini:nitro
      titleConvo: true
      titleModel: openai/gpt-4.1-mini:nitro
      dropParams:
        - stop
      modelDisplayLabel: "xAI"
      plugins:
        - id: web
          max_results: 15
      agents:
        code: true
        tools: true

    # Other models via OpenRouter
    - name: "Other Models (OpenRouter)"
      apiKey: ${OPENROUTER_KEY}
      baseURL: https://openrouter.ai/api/v1
      models:
        fetch: false
        default:
          - minimax/minimax-m1:nitro
          - minimax/minimax-m1:extended
      titleConvo: true
      titleModel: openai/gpt-4.1-mini:nitro
      dropParams:
        - stop
      modelDisplayLabel: "Other Models"
      plugins:
        - id: web
          max_results: 15
      agents:
        code: true
        tools: true

  openAI:
    disabled: true

fileConfig:
  endpoints:
    vectorStore:
      type: rag_api
      ragApiUrl: ${RAG_API_URL}

speech:
  tts:
    openai:
      apiKey: ${OPENAI_API_KEY}
      model: tts-1
      voices:
        - alloy
        - echo
        - fable
        - onyx
        - nova
        - shimmer
  stt:
    openai:
      apiKey: ${OPENAI_API_KEY}
      model: whisper-1
  speechTab:
    conversationMode: true
    advancedMode: false
    speechToText:
      engineSTT: external
      languageSTT: English (US)
      autoTranscribeAudio: true
      decibelValue: -45
      autoSendText: 0
    textToSpeech:
      engineTTS: external
      voice: alloy
      languageTTS: en
      automaticPlayback: true
      playbackRate: 1
      cacheTTS: true
      
mcpServers:
  jina:
    type: streamable-http
    url: https://mcps.netlify.app/mcp/jina
    headers:
      X-MCP-API-Key: "${MCP_API_KEY}"
    timeout: 180000
    initTimeout: 15000
    
  thinking:
    type: streamable-http
    url: https://mcps.netlify.app/mcp/thinking
    headers:
      X-MCP-API-Key: "${MCP_API_KEY}"
    timeout: 180000
    initTimeout: 15000

  business-strategy:
    type: streamable-http
    url: https://mcps.netlify.app/mcp/business-strategy
    headers:
      X-MCP-API-Key: "${MCP_API_KEY}"
    timeout: 180000
    initTimeout: 15000
    
  stripe:
    type: streamable-http
    url: https://mcps.netlify.app/mcp/stripe
    headers:
      X-MCP-API-Key: "${MCP_API_KEY}"
    timeout: 180000
    initTimeout: 15000

  n8n-business-tools-mcp:
    type: sse
    url: https://n8n.metamation.net/mcp/12bd30ab-6657-4d89-95f7-5e6c818d81e6/sse
    headers:
      Authorization: "Bearer ${N8N_API_KEY}"
    timeout: 180000
    initTimeout: 15000
    
  n8n-outlook-mcp:
    type: sse
    url: https://n8n.metamation.net/mcp/97a5106e-0b1a-4b61-8818-937f81d6932c/sse
    headers:
      Authorization: "Bearer ${N8N_API_KEY}"
    timeout: 180000
    initTimeout: 15000

memory:
  disabled: false
  validKeys: ["preferences", "work_info", "personal_info", "business_info", "skills", "interests", "context"]
  tokenLimit: 10000
  personalize: true
  agent:
    provider: "openrouter"
    model: "openai/gpt-4.1:nitro"
    instructions: "You are a memory management assistant for Alex. Store and manage user information accurately. Focus on remembering user preferences, work information, businesses information, personal details, skills, interests, and conversation context to provide personalized assistance. Business information refers to info relating to Alex's business called METAMATION"
    model_parameters:
      temperature: 0.1

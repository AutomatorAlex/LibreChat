version: 1.2.1
interface:
  endpointsMenu: true
  modelSelect: true
  parameters: true
  sidePanel: true
  presets: true
  prompts: true
  bookmarks: true
  multiConvo: true
  agents: true
  temporaryChat: true
  runCode: true

endpoints:
  custom:
    - name: OpenRouter
      apiKey: ${OPENROUTER_KEY}
      baseURL: https://openrouter.ai/api/v1
      models:
        fetch: true
        default:
          # Claude models (only Claude 4)
          - anthropic/claude-opus-4
          - anthropic/claude-sonnet-4
          - anthropic/claude-3.7-sonnet
          - anthropic/claude-3.7-sonnet:thinking
          # Google models (no free versions)
          - google/gemini-2.5-flash-preview-05-20
          - google/gemini-2.5-flash-preview-05-20:thinking
          - google/gemini-2.5-pro-preview
          - google/gemini-2.5-flash-preview
          - google/gemini-2.5-flash-preview:thinking
          - google/gemini-2.0-flash-001
          - google/gemini-flash-1.5
          - google/gemini-flash-1.5-8b
          # Meta Llama models (no free versions)
          - meta-llama/llama-3.3-70b-instruct
          - meta-llama/llama-3.2-90b-vision-instruct
          - meta-llama/llama-3.2-11b-vision-instruct
          - meta-llama/llama-3.1-405b-instruct
          - meta-llama/llama-3.1-70b-instruct
          - meta-llama/llama-3.1-8b-instruct
          # Mistral models
          - mistralai/mistral-large-2411
          - mistralai/mistral-large-2407
          - mistralai/mistral-medium-3
          - mistralai/mistral-small-3.1-24b-instruct
          - mistralai/mistral-small-24b-instruct-2501
          - mistralai/mistral-nemo
          - mistralai/mistral-7b-instruct
          # Other popular models
          - x-ai/grok-beta
          - qwen/qwen-2.5-72b-instruct
          # OpenAI advanced models only
          - openai/gpt-4.1
          - openai/gpt-4.1-mini
          - openai/gpt-4.1-nano
          - openai/gpt-4.5-preview
          - openai/o1-preview
          - openai/o1-mini
          - openai/o4-mini
          - openai/o4-mini-high
      titleConvo: true
      titleModel: anthropic/claude-3-haiku
      dropParams:
        - stop
      modelDisplayLabel: OpenRouter
      plugins:
        - id: web
          max_results: 10
      agents:
        code: true
        tools: true
  openAI:
    apiKey: ${OPENAI_API_KEY}
    models:
      default:
        # Only need dall-e for image generation
        - dall-e-3
        - dall-e-2
      fetch: false
    titleConvo: false
    agents:
      code: true
      tools: true

fileConfig:
  endpoints:
    vectorStore:
      type: rag_api
      ragApiUrl: ${RAG_API_URL}

actions:
  allowedDomains:
    - swapi.dev
    - librechat.ai
    - google.com
    - api.github.com
    - jsonplaceholder.typicode.com
    - httpbin.org
    - api.openweathermap.org
    - newsapi.org
    - api.trello.com
    - slack.com

speech:
  tts:
    openai:
      apiKey: ${OPENAI_API_KEY}
      model: tts-1
      voices:
        - alloy
        - echo
        - fable
        - onyx
        - nova
        - shimmer
  stt:
    openai:
      apiKey: ${OPENAI_API_KEY}
      model: whisper-1
  speechTab:
    conversationMode: true
    advancedMode: false
    speechToText:
      engineSTT: external
      languageSTT: English (US)
      autoTranscribeAudio: true
      decibelValue: -45
      autoSendText: 0
    textToSpeech:
      engineTTS: external
      voice: alloy
      languageTTS: en
      automaticPlayback: true
      playbackRate: 1
      cacheTTS: true

mcpServers:
  # Using Netlify Functions with streamable-http transport (perfect for hosted LibreChat!)
  exa-search:
    type: streamable-http
    url: https://mcps.netlify.app/.netlify/functions/mcp-exa
    headers:
      X-MCP-API-Key: "${MCP_API_KEY}"
    timeout: 30000
    initTimeout: 15000
    
  openrouter:
    type: streamable-http  
    url: https://mcps.netlify.app/.netlify/functions/mcp-openrouter
    headers:
      X-MCP-API-Key: "${MCP_API_KEY}"
    timeout: 30000
    initTimeout: 15000
    
  sequential-thinking:
    type: streamable-http
    url: https://mcps.netlify.app/.netlify/functions/mcp-thinking
    headers:
      X-MCP-API-Key: "${MCP_API_KEY}"
    timeout: 30000
    initTimeout: 15000
    
  stripe-toolkit:
    type: streamable-http
    url: https://mcps.netlify.app/.netlify/functions/mcp-stripe
    headers:
      X-MCP-API-Key: "${MCP_API_KEY}"
    timeout: 30000
    initTimeout: 15000

  business-strategy:
    type: streamable-http
    url: https://mcps.netlify.app/.netlify/functions/mcp-business-strategy
    headers:
      X-MCP-API-Key: "${MCP_API_KEY}"
    timeout: 30000
    initTimeout: 15000

  # Working N8N MCPs (keep these as SSE)
  n8n-business-tools-mcp:
    type: sse
    url: https://n8n.metamation.net/mcp/12bd30ab-6657-4d89-95f7-5e6c818d81e6/sse
    timeout: 30000
    initTimeout: 15000
    
  n8n-outlook-mcp:
    type: sse
    url: https://n8n.metamation.net/mcp/97a5106e-0b1a-4b61-8818-937f81d6932c/sse
    timeout: 30000
    initTimeout: 15000